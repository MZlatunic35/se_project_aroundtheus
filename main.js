!function(){"use strict";class e{constructor(e,t,n){let{name:s,link:r}=e;this._name=s,this._link=r,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._cardImageEl.alt=this._name,this._cardImageEl.src=this._link,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}resetValidation(){this._inputList.forEach((e=>{const t=this._formElement.querySelector(`#${e.id}-error`);this._hideInputError(e,t)})),this._toggleButtonState()}_toggleButtonState(){if(this._hasInvalidInput())return this._buttonElement.classList.add(this._inactiveButtonClass),void(this._buttonElement.disabled=!0);this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_setEventListener(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListener()}}class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class s extends n{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupElement.querySelectorAll(".modal__input")}_getInputValues(){return this._newData={},this._inputList.forEach((e=>{this._newData[e.name]=e.value})),this._newData}setEventListener(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._popupForm.reset(),super.close()}}const r=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-add-button"),i=document.querySelector("#profile-edit-modal"),l=document.querySelector("#add-card-modal"),a=document.querySelector("#preview-modal"),c=(i.querySelector(".modal__close"),l.querySelector(".modal__close"),a.querySelector(".modal__close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#edit-form-title")),u=document.querySelector("#edit-form-description"),d=i.querySelector(".modal__form"),_=l.querySelector(".modal__form"),m=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,_.querySelector(".modal__input_type_title"),_.querySelector(".modal__input_type_url"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-footer"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});function p(t){let{name:n,link:s}=t;const r=new e({name:n,link:s},"#card-template",(e=>{let{name:t,link:n}=e;h.open({name:t,link:n})}));return r.getView()}const h=new class extends n{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}open(e){let{link:t,name:n}=e;this._popupElement.querySelector(".modal__preview-footer").textContent=n;const s=this._popupElement.querySelector(".modal__preview-image");s.src=t,s.alt=n,super.open()}}({popupSelector:"#preview-modal"});h.setEventListeners();const E=new class{constructor(e,t){this._name=document.querySelector(e),this._profession=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,profession:this._profession.textContent}}setUserInfo(e,t){this._name.textContent=e,this._profession.textContent=t}}(".profile__title",".profile__description"),S=new s("#profile-edit-modal",(function(e){let{title:t,description:n}=e;E.setUserInfo(t,n),S.close()}));S.setEventListener(),r.addEventListener("click",(()=>{const e=E.getUserInfo();c.value=e.name,u.value=e.profession,S.open()}));const v=new t(m,_);v.enableValidation(),new t(m,d).enableValidation();const y=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{let{name:t,link:n}=e;const s=p({name:t,link:n});y.addItem(s)}},".cards__list");y.renderItems();const f=new s("#add-card-modal",(e=>{const t=p(e);y.prependItem(t),f.close()}));f.setEventListener(),o.addEventListener("click",(()=>{v.resetValidation(),f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,